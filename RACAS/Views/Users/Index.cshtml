@using Microsoft.AspNetCore.Http
@using RACAS.Models;
@using RACAS.Model
@using RACAS.Controllers
@using Microsoft.Extensions.Localization
@using Microsoft.AspNetCore.Localization
@using System.Globalization
@using Nancy.Json;
@inject IHttpContextAccessor HttpContextAccessor
@inject IStringLocalizer<HomeController> Localizer
@{
    var serializer = new JavaScriptSerializer();
    string currCul = "";
    string curCulName = "English";
    var requestCulture = Context.Features.Get<IRequestCultureFeature>();
    string _userId = Context.Request.Query["UserId"];
    if (requestCulture.RequestCulture.Culture.Name == "ar-SA")
    {
        curCulName = "Arabic";
        currCul = "https://cdn.datatables.net/plug-ins/1.12.1/i18n/ar.json";
    }

    List<MenuViewModel> menuList = (List<MenuViewModel>)ViewData["UserRoleMenu"];
    bool CanCreate = false, CanDelete = false, CanEdit = false, CanExport = false, CanEmail = false, CanRead = false;
    if (menuList?.Count > 0)
    {
        foreach (var m in menuList)
        {
            if (m.ModuleId == "liusers")
            {
                if (m.ActionName == "Create")
                    CanCreate = true;
                if (m.ActionName == "Edit")
                    CanEdit = true;
                if (m.ActionName == "Delete")
                    CanDelete = true;
                if (m.ActionName == "Export")
                    CanExport = true;
                if (m.ActionName == "Email")
                    CanEmail = true;
                if (m.ActionName == "Read")
                    CanRead = true;
            }
        }
    }

    int UserTypeId = 0;
    try
    {
        UserTypeId = Convert.ToInt32(HttpContextAccessor.HttpContext.Session.GetString("UserTypeId"));
        if (UserTypeId == 1)
        {
            CanCreate = true; CanDelete = true; CanEdit = true; CanExport = true; CanEmail = true; CanRead = true;
        }
    }
    catch (Exception ex)
    {

    }
}
@{
    Layout = "~/Views/Shared/_Layout.cshtml";

}
@model RACAS.Model.UserDetails
@{
    List<UserTypes> listLookup = (List<UserTypes>)ViewData["LookupList"];
}
<link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/jstree/3.2.1/themes/default/style.min.css" />
<style>

    a {
        cursor: pointer !important
    }
</style>
<section class="content-header">
    <h1>
        @Localizer["Users"]
    </h1>
    <ol class="breadcrumb">
        <li><a href="#"><i class="fa fa-dashboard"></i> @Localizer["Home"]</a></li>
        <li><a href="#">@Localizer["Users"]</a></li>
    </ol>
</section>

<section class="content" id="apporg">
    <div class="row">
        <div class="col-xs-4">
            <div class="box">

                <div class="box-body">

                    <div class="row" style="margin-left:0px; margin-right:0px">
                        <form id="validationForm">
                            <div class="col-md-6" style="overflow-x: auto; padding-left: 5px; padding-right: 5px; padding-bottom: 20px">
                                <input type="hidden" v-model="d.Id" />

                                <label> @Localizer["UserType"] <span style="color:red">*</span></label>
                                <select class="form-control validate[required]" v-model="d.UserTypeId">
                                    @if (listLookup?.Count > 0)
                                    {
                                        for (int i = 0; i < listLookup.Count; i++)
                                        {
                                            var r = listLookup[i];
                                            <option value="@r.Id">
                                                @r.TypeName
                                            </option>
                                        }
                                    }

                                </select>
                            </div>
                            <div class="col-md-6" style="overflow-x: auto; padding-left: 5px; padding-right: 5px; padding-bottom: 20px">
                                <label> @Localizer["FirstName"] <span style="color:red">*</span></label>
                                <input type="text" class="form-control validate[required]" v-model="d.FirstName" />
                            </div>
                            <div class="col-md-6" style="overflow-x: auto; padding-left: 5px; padding-right: 5px; padding-bottom: 20px">
                                <label> @Localizer["LastName"] <span style="color:red">*</span></label>
                                <input type="text" class="form-control validate[required]" v-model="d.LastName" />
                            </div>
                            <div class="col-md-6" style="overflow-x: auto; padding-left: 5px; padding-right: 5px; padding-bottom: 20px">
                                <label> @Localizer["UserName"] <span style="color:red">*</span></label>
                                <input type="text" class="form-control validate[required]" v-model="d.UserName" />
                            </div>
                            <div class="col-md-6" style="overflow-x: auto; padding-left: 5px; padding-right: 5px; padding-bottom: 20px">
                                <label> @Localizer["Email"] <span style="color:red">*</span></label>
                                <input type="text" class="form-control validate[required,custom[email]]" v-model="d.Email" />
                            </div>
                            <div class="col-md-6" style="overflow-x: auto; padding-left: 5px; padding-right: 5px; padding-bottom: 20px">
                                <label> @Localizer["Password"] <span style="color:red">*</span></label>
                                <input type="password" class="form-control validate[required]" v-model="d.Password" />
                            </div>
                            <div class="col-md-6" style="overflow-x: auto; padding-left: 5px; padding-right: 5px; padding-bottom: 20px">

                                @{
                                    if (CanCreate)
                                    {
                                        <button type="button" class="btn btn-primary" v-on:click="insert($event)">@Localizer["Save"]</button>
                                    }
                                }

                            </div>
                        </form>
                    </div>
                </div>
            </div>
            <div class="box">
                <div class="box-header">
                </div>
                <div class="box-body">
                    <div class="row">
                        <div class="col-xs-5">
                            <label>Branches need to be Assign</label>
                            <select class="form-control" id="ddlBranchUnAssigned" multiple style="height:300px">
                                @{
                                    if (Model?.BranchList.Count > 0)
                                    {
                                        for (int i = 0; i < Model.BranchList.Count; i++)
                                        {
                                            var r = Model.BranchList[i];
                                            <option value="@r.Id">@r.BranchName</option>
                                        }
                                    }
                                }
                            </select>
                        </div>
                        <div class="col-xs-1" style="padding-top:8%">
                            <button type="button" class="btn-sm btn-default" v-on:click="AssignBranches($event)"><i class="fa fa-arrow-right"></i></button><br />
                            <br />
                            <button type="button" class="btn-sm btn-default" v-on:click="UnAssignBranches($event)"><i class="fa fa-arrow-left"></i></button>
                        </div>
                        <div class="col-xs-6">
                            <label>Assigned Branches to User</label>
                            <select class="form-control" id="ddlBranchAssigned" multiple style="height:300px">
                                @{
                                    if (Model?.UserBranchList.Count > 0)
                                    {
                                        for (int i = 0; i < Model.UserBranchList.Count; i++)
                                        {
                                            var r = Model.UserBranchList[i];
                                            <option value="@r.Id">@r.BranchName</option>
                                        }
                                    }
                                }
                            </select>
                        </div>
                    </div>

                </div>
            </div>
            <div class="box" style="display:none">

                <div class="box-body">

                    <div id="jsTree">
                        <ul>
                            @{
                                if (Model.ModuleList?.Count() > 0)
                                {
                                    foreach (var m in Model.ModuleList)
                                    {
                                        <li class="treeview" id="@m.Id">
                                            <a href="#">
                                                <i class="fa fa-users"></i>
                                                @{
                                                    if (curCulName == "Arabic")
                                                    {
                                                        <span> @m.ArabicModuleName</span>
                                                    }
                                                    else
                                                    {
                                                        <span> @m.ModuleName</span>
                                                    }
                                                }

                                            </a>
                                            <ul class="treeview-menu">
                                                @foreach (var n in m.ActionList)
                                                {

                                                    <li id="@(m.Id+"_"+n.Id)">
                                                        <a>
                                                            <i class="fa fa-circle-o"></i>
                                                            <span> @n.ActionName @m.ModuleName</span>
                                                        </a>
                                                    </li>
                                                }

                                            </ul>
                                        </li>
                                    }
                                }
                            }

                        </ul>
                    </div>
                </div>
            </div>

        </div>

        <div class="col-xs-8">
            <div class="box">

                <div class="box-body" style="height:800px">

                    <div class="row" style="margin-left:0px; margin-right:0px">

                        <div class="col-md-12" style="padding-left: 5px; padding-right: 5px; padding-bottom: 20px">
                            <table class="table table-bordered table-striped datatable" id="example1">
                                <thead>
                                    <tr>
                                        <th>#@Localizer["No"]</th>
                                        <th>@Localizer["FullName"]</th>
                                        <th>@Localizer["Email"]</th>
                                        <th>@Localizer["UserName"]</th>
                                        <th>@Localizer["Type"]</th>
                                        <th>@Localizer["CreatedDate"]</th>

                                       

                                        @{
                                            if (CanDelete)
                                            {
                                                <th style="width:20px">@Localizer["Delete"]</th>
                                            }
                                        }

                                    </tr>
                                </thead>
                                <tbody>
                                    @{
                                        if (Model?.Users?.Count > 0 && CanRead)
                                        {
                                            for (int i = 0; i < Model.Users.Count; i++)
                                            {
                                                var r = Model.Users[i];
                                                if (r.RecordStatus == "Active" && r.UserTypeId != 1)
                                                {
                                                    var _userType = listLookup.Where(x => x.Id == r.UserTypeId).FirstOrDefault();
                                                    <tr>
                                                        <td>@(i + 1)</td>
                                                        <td><a href="/Users/index?UserId=@r.Id">@r.FirstName @r.LastName</a> </td>
                                                        <td>@r.Email</td>
                                                        <td>@r.UserName</td>
                                                        <td>@(_userType?.TypeName)</td>
                                                        <td>@r.CreatedDate.ToString("MM/dd/yyyy", new CultureInfo("en-US"))</td>

                                                       


                                                        @{
                                                            if (CanDelete)
                                                            {
                                                                <td> <a v-on:click="Del('@r.Id')"> @Localizer["Delete"] </a></td>
                                                            }
                                                        }



                                                    </tr>
                                                }
                                            }
                                        }
                                    }
                                </tbody>
                            </table>
                        </div>
                    </div>
                </div>
            </div>

         
        </div>
    </div>


</section>

@section scripts {
    <script src="~/JStree/jstree.min.js"></script>
    <script>

        var objCommon = new Common();
        $(document).ready(function () {
            $("#leftmenu li").removeClass("active");
            $("#liusers").addClass("active");

            var RightsData = [];

            var app = new Vue({
                el: '#apporg',
                data: {
                    d: {
                        FirstName: '@Model.UserData?.FirstName',
                        LastName: '@Model.UserData?.LastName',
                        UserName: '@Model.UserData?.UserName',
                        Email: '@Model.UserData?.Email',
                        UserTypeId: '@Model.UserData?.UserTypeId',
                        Id: '@Model.UserData?.Id',
                        Password:'@Model.UserData?.Password'
                    },
                    UserId: '@_userId'
                },
                methods: {
                    insert($event) {


                        if (!objCommon.Validate("#validationForm"))
                            return;



                        var dataParam = {
                            UserId: Number(this.d.Id),
                            FirstName: this.d.FirstName,
                            LastName: this.d.LastName,
                            UserName: this.d.UserName,
                            Email: this.d.Email,
                            Password: this.d.Password,
                            UserTypeId: Number(this.d.UserTypeId)
                           // UserRights: RightsData
                        };


                        objCommon.AjaxCall("/Users/insert", JSON.stringify(dataParam), "POST", true, function (d) {
                            console.log(d);
                            if (d == "success") {
                                objCommon.ShowMessage("Type saved.", "success");
                                window.location.reload();
                            }
                            else {
                                objCommon.ShowMessage(d, "error");
                            }
                        }, $event.currentTarget)

                    },

                    Alert(id) {
                        this.d.Id = id;
                    },
                    Edit(id, name) {
                        this.d.Id = id;
                        this.d.UserType = name;



                    },
                    Del(id) {
                        Swal.fire({
  title: "Are you sure?",
  text: "You won't be able to revert this!",
  icon: "warning",
  showCancelButton: true,
  confirmButtonColor: "#3085d6",
  cancelButtonColor: "#d33",
  confirmButtonText: "Yes, delete it!"
}).then((result) => {
  if (result.isConfirmed) {


        var param = {
                            UserId: Number(id),
                        }
                        objCommon.AjaxCall("/Users/delete", $.param(param), "GET", true, function (response) {

                             Swal.fire({
      title: "Deleted!",
      text: "Record has been deleted.",
      icon: "success"
    });
                            window.location.reload();
                        })

   
  }
});
                      
                    },
                    AssignBranches($event) {

                        var dthis = this;

                        if (Number(dthis.UserId) == 0) {
                            objCommon.ShowMessage("Please select user first.", "error");
                            return;
                        }
                        var _branchIds = $("#ddlBranchUnAssigned").val();
                        if (_branchIds.length == 0) {
                            objCommon.ShowMessage("Please select branch first.", "error");
                            return;
                        }
                        var ObjectList = [];
                        _branchIds.forEach(function (v) {
                            ObjectList.push({
                                UserId: Number(dthis.UserId),
                                BranchId: Number(v),
                                Id: 0
                            });
                        })
                        objCommon.AjaxCall("/Users/AssignBranches", JSON.stringify(ObjectList), "POST", true, function (response) {
                            window.location.reload();
                        }, $event.currentTarget);

                    },
                    UnAssignBranches($event) {
                        var dthis = this;
                        if (Number(dthis.UserId) == 0) {
                            objCommon.ShowMessage("Please select user first.", "error");
                            return;
                        }
                        var _branchIds = $("#ddlBranchAssigned").val();
                        if (_branchIds.length == 0) {
                            objCommon.ShowMessage("Please select branch first.", "error");
                            return;
                        }
                        var ObjectList = [];
                        _branchIds.forEach(function (v) {
                            ObjectList.push({
                                UserId: Number(dthis.UserId),
                                BranchId: Number(v),
                                Id: 0
                            });
                        })

                        objCommon.AjaxCall("/Users/UnAssignBranches", JSON.stringify(ObjectList), "POST", true, function (response) {
                            window.location.reload();
                        }, $event.currentTarget);

                    }
                }
            });


            $('#jsTree').jstree({
                "checkbox": {
                    "keep_selected_style": false
                },
                "plugins": ["checkbox"],
                "types": {
                    "#": {
                        "max_children": 1,
                        "max_depth": 4,
                        "valid_children": ["root"]
                    },
                    "root": {
                        "icon": "/static/3.3.11/assets/images/tree_icon.png",
                        "valid_children": ["default"]
                    },
                    "default": {
                        "icon": "/static/3.3.11/assets/images/tree_icon.png",
                        "valid_children": ["default"]
                    },
                    "file": {
                        "icon": "/static/3.3.11/assets/images/tree_icon.png",
                        "valid_children": []
                    }
                },
            });
            $('#jsTree').on("changed.jstree", function (e, data) {
                // const selectedIds = data.selected; // Get selected node IDs
                // const parentIds = selectedIds.map(id => {
                //     const node = $('#jsTree').jstree().get_node(id);
                //     return node.parent !== '#' ? node.parent : null; // Get parent ID if it exists
                // }).filter(id => id !== null); // Filter out null values

                // // Combine selected node IDs and their parent IDs
                // const allSelectedIds = [...new Set([...selectedIds, ...parentIds])];
                RightsData = data.selected;
            });
            $('#jsTree').on("ready.jstree", function (e, data) {

                var values = '@Model?.Selected';
                var array = values.split(",");

                $('#jsTree').jstree("select_node", array);
            });



            $('#ignismyModal').on('hidden.bs.modal', function () {
                window.location.href = '@Url.Action("Index", "Users")';
            });
        })
    </script>
}

}